<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Data</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Data.Common.IRepository">
            <summary>
            Interface of repository
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.IRepository.CurrentTraceId">
            <summary>
            Gets current trance id
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.IRepository.UnitOfWork">
            <summary>
            Gets or sets unit of work entry
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.IRepository`1">
            <summary>
            Interface of repository
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="P:Cosmos.Data.Common.IRepository`1.RawTypedContext">
            <summary>
            Gets the raw typed DbContext
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.IStoreContext">
            <summary>
            Interface of Store Context
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.IStoreContext.Commit">
            <summary>
            Commit
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.IStoreContext.Rollback">
            <summary>
            Rollback
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.ITransactionManager">
            <summary>
            An interface of the append transaction calling wrapper.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.ITransactionManager.Count">
            <summary>
            Gets the count of append transaction in this scope.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.ITransactionManager.Register(Cosmos.Data.Common.ITransactionWrapper,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Register an append transaction into this scope.
            </summary>
            <param name="transWrapper"></param>
            <param name="type"></param>
            <param name="isolationLevel"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cosmos.Data.Common.IUnitOfWorkManager">
            <summary>
            Interface of Unit of Work manager
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.IUnitOfWorkManager.Current">
            <summary>
            Gets current unit of work<br />
            获取当前工作单元
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.Binding(Cosmos.Data.Common.IRepository)">
            <summary>
            Bind the repository into this manager<br />
            将指定仓储的事务交由本工作单元管理器管理
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Begin an unit of work
            </summary>
            <param name="transWrapper"></param>
            <param name="types"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Action,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Begin an unit of work with disposable action
            </summary>
            <param name="transWrapper"></param>
            <param name="disposableAction"></param>
            <param name="types"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Begin an unit of work with commit manually
            </summary>
            <param name="transWrapper"></param>
            <param name="manualCommit"></param>
            <param name="types"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Action,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Begin an unit of work with disposable action and commit manually
            </summary>
            <param name="transWrapper"></param>
            <param name="disposableAction"></param>
            <param name="manualCommit"></param>
            <param name="types"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Data.Common.IUnitOfWorkManager.IsVirtualManager">
            <summary>
            To flag this manager is virtual manager or not.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.GetAdditionalData(System.String)">
            <summary>
            Get additional data
            </summary>
            <param name="keyOfData"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.GetAdditionalData``1">
            <summary>
            Get additional data
            </summary>
            <typeparam name="TData"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.GetAdditionalData``1(System.String)">
            <summary>
            Get additional data
            </summary>
            <typeparam name="TData"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.SetAdditionalData(System.String,System.Object)">
            <summary>
            Set additional data
            </summary>
            <param name="keyOfData"></param>
            <param name="data"></param>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.SetAdditionalData``1(``0)">
            <summary>
            Set additional data
            </summary>
            <param name="data"></param>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Common.IUnitOfWorkManager.SetAdditionalData``1(System.String,``0)">
            <summary>
            Set additional data
            </summary>
            <param name="keyOfData"></param>
            <param name="data"></param>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="T:Cosmos.Data.Common.ScopedRepositoryManager">
            <summary>
            Scoped repository manager
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.ScopedRepositoryManager.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.ScopedRepositoryManager"/>
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.ScopedRepositoryManager.TranceId">
            <summary>
            Gets current trance id
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.RepositoryAttribute">
            <summary>
            Attribute of repository
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryAttribute.#ctor(System.String)">
            <summary>
            Create a new instance of repository attribute
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryAttribute.#ctor(System.String,System.Type)">
            <summary>
            Create a new instance of repository attribute
            </summary>
            <param name="name"></param>
            <param name="targetType"></param>
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryAttribute.Name">
            <summary>
            Repository name
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryAttribute.MapTo">
            <summary>
            Map to type
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.RepositoryLifecycleAttribute">
            <summary>
            Repository initializing interceptor
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryLifecycleAttribute.Invoke(AspectCore.DynamicProxy.AspectContext,AspectCore.DynamicProxy.AspectDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Common.RepositoryMetadata">
            <summary>
            Static metadata of repository
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryMetadata.Name">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryMetadata.ServiceType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryMetadata.ImplementType">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Common.RepositoryManager">
            <summary>
            Repository manager
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryManager.Instance">
            <summary>
            Gets or creates a new instance of <see cref="T:Cosmos.Data.Common.RepositoryManager"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryManager.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.RepositoryManager"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryManager.Register(Cosmos.Data.Common.RepositoryReflector)">
            <summary>
            Register
            </summary>
            <param name="reflector"></param>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryManager.Require(System.Type)">
            <summary>
            Require by given type
            </summary>
            <param name="implementationType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryManager.Require``1">
            <summary>
            Require by typed argument
            </summary>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Common.RepositoryReflector">
            <summary>
            Runtime metadata for repository
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryReflector.Name">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryReflector.ServiceType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryReflector.ImplementType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.RepositoryReflector.MapType">
            <summary>
            Mapping type
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryReflector.ExportMetadata">
            <summary>
            Export static metadata
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Common.RepositoryReflector.MappingType">
            <summary>
            Metadata mapping types
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.RepositoryReflector.MappingType.InterfaceToClass">
            <summary>
            Interface to class
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.RepositoryReflector.MappingType.AbstractToClass">
            <summary>
            Abstract class to class
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.RepositoryReflector.MappingType.ClassToClass">
            <summary>
            Base class to class
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.RepositoryReflector.MappingType.ClassSelf">
            <summary>
            Class-self
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryReflector.Create``2">
            <summary>
            Create for repository, and return an instance of runtime repository metadata object.
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplement"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryReflector.Create``1">
            <summary>
            Create for repository, and return an instance of runtime repository metadata object.
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Cosmos.Data.Common.RepositoryMetadataExtensions">
            <summary>
            Extensions for repository metadata
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryMetadataExtensions.RuntimeScoped(Cosmos.Data.Common.IRepositoryMetadata,Cosmos.Data.Common.IRepository,Cosmos.IdUtils.TraceIdAccessor)">
            <summary>
            Convert to runtime scoped repository metadata
            </summary>
            <param name="metadata"></param>
            <param name="instance"></param>
            <param name="accessor"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Common.RuntimeScopedRepositoryMetadata">
            <summary>
            Runtime scoped repository metadata
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RuntimeScopedRepositoryMetadata.#ctor(Cosmos.Data.Common.IRepositoryMetadata,Cosmos.Data.Common.IRepository,Cosmos.IdUtils.TraceIdAccessor)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.RuntimeScopedRepositoryMetadata"/>
            </summary>
            <param name="metadata"></param>
            <param name="instance"></param>
            <param name="accessor"></param>
        </member>
        <member name="P:Cosmos.Data.Common.RuntimeScopedRepositoryMetadata.TranceId">
            <summary>
            Trance id
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.RuntimeScopedRepositoryMetadata.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.RuntimeScopedRepositoryMetadata.ServiceType">
            <summary>
            Service type
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.RuntimeScopedRepositoryMetadata.ImplementType">
            <summary>
            Implementation type
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.RuntimeScopedRepositoryMetadata.Instance">
            <summary>
            Instance of repository
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.RepositoryRawContextAttribute">
            <summary>
            Repository raw database context initializing interceptor
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryRawContextAttribute.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.RepositoryRawContextAttribute"/>.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryRawContextAttribute.#ctor(System.Type,System.String)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.RepositoryRawContextAttribute"/>.
            </summary>
            <param name="typeOfContext"></param>
            <param name="bindingPropertyName"></param>
        </member>
        <member name="M:Cosmos.Data.Common.RepositoryRawContextAttribute.Invoke(AspectCore.DynamicProxy.AspectContext,AspectCore.DynamicProxy.AspectDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Common.TransactionAppendOperator">
            <summary>
            Transaction append operator
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionAppendOperator.BeforeCommit">
            <summary>
            Before commit
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionAppendOperator.AfterCommit">
            <summary>
            After commit
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionAppendOperator.BeforeRollback">
            <summary>
            Before rollback
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionAppendOperator.AfterRollback">
            <summary>
            After rollback
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionAppendOperator.BeforeTransNotify">
            <summary>
            Before transaction notify
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionAppendOperator.AfterTransNotify">
            <summary>
            After transaction notify
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.TransactionNotifyArgs">
            <summary>
            Transaction notify args
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionNotifyArgs.#ctor(System.String)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.TransactionNotifyArgs"/>.
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionNotifyArgs.Message">
            <summary>
            Gets or sets message
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionNotifyArgs.IsolationLevel">
            <summary>
            Gets or sets isolation level
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionNotifyArgs.Id">
            <summary>
            Gets transaction Id
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.BeforeTransNotifyArgs">
            <summary>
            Before transaction notify args
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.BeforeTransNotifyArgs.#ctor(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.BeforeTransNotifyArgs.StartTime">
            <summary>
            Gets the time of start<br />
            开始时间
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.BeforeTransNotifyArgs.Id">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Common.AfterTransNotifyArgs">
            <summary>
            After transaction notify args
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.AfterTransNotifyArgs.#ctor(Cosmos.Data.Common.BeforeTransNotifyArgs,System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.AfterTransNotifyArgs.Exception">
            <summary>
            Gets or sets exception
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.AfterTransNotifyArgs.FinTime">
            <summary>
            Gets the time of finish<br />
            完成时间
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.AfterTransNotifyArgs.Duration">
            <summary>
            Duration<br />
            间隔时间
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.AfterTransNotifyArgs.Id">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Common.TransactionWrapper">
            <summary>
            A wrapper for transaction.
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.TransactionWrapper._seed">
            <summary>
            Seed number <br />
            种子数
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionWrapper.WatchingWindow">
            <summary>
            Watching window for Transaction wrapper <br />
            用于调试的观察口
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.#ctor(System.Data.Common.DbConnection,Cosmos.Data.Common.TransactionAppendOperator)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.TransactionWrapper"/>
            </summary>
            <param name="connection"></param>
            <param name="operator"></param>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.#ctor(System.Data.Common.DbConnection,System.Data.IsolationLevel,Cosmos.Data.Common.TransactionAppendOperator)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.TransactionWrapper"/>
            </summary>
            <param name="connection"></param>
            <param name="level"></param>
            <param name="operator"></param>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.#ctor(Cosmos.Data.Common.TransactionWrapper)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.TransactionWrapper"/>
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionWrapper.Connection">
            <summary>
            Return current connection.<br />
            获得当前连接。<br />
            如果使用连接池，则请从资源池中直接获得
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionWrapper.CurrentTransaction">
            <summary>
            Returns current transaction. If there's no transaction, it'll return null.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionWrapper.Id">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.GetOrBegin(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.TransactionWrapper.IsolationLevel">
            <summary>
            Gets the <see cref="P:Cosmos.Data.Common.TransactionWrapper.IsolationLevel"/> of current transaction.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionWrapper.AppendOperator">
            <summary>
            Append transaction operator<br />
            额外的事务操作
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.OpenConnectionIfNeed">
            <summary>
            Open connection if need<br />
            如需要，开启连接。<br />
            如果连接资源由对象池托管，则尝试从资源池中获取连接对象
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.ReturnObjectIfNeed">
            <summary>
            Return object if need<br />
            如需要，关闭并归还连接<br />
            如果连接由对象池托管，则尝试向资源池归还该连接对象
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.Commit(System.Boolean)">
            <summary>
            Commit.
            </summary>
            <param name="clearTransaction">Do need clear transaction after commit.</param>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.Rollback(System.Boolean)">
            <summary>
            Rollback.
            </summary>
            <param name="clearTransaction">Do need clear transaction after rollback.</param>
        </member>
        <member name="P:Cosmos.Data.Common.TransactionWrapper.IsNull">
            <summary>
            To flag this instance is NullTransactionWrapper or not. This will always return false.
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.TransactionWrapper._disposeCounter">
            <summary>
            Dispose counter
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.DisposableCallback">
            <summary>
            Disposable acton
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.Finalize">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.CreateFromTransaction(System.Data.Common.DbTransaction,Cosmos.Data.Common.TransactionAppendOperator)">
            <summary>
            To create a new instance of <see cref="T:Cosmos.Data.Common.TransactionWrapper"/>.
            </summary>
            <param name="transaction"></param>
            <param name="operator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.TransactionWrapper.CreateNull">
            <summary>
            Returns a new instance of <see cref="T:Cosmos.Data.Core.Transaction.NullTransactionWrapper"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Common.Transaction.NullTransactionManager">
            <summary>
            An instance of null transaction calling wrapper.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.Transaction.NullTransactionManager.Instance">
            <summary>
            Returns a single instance of <see cref="T:Cosmos.Data.Common.Transaction.NullTransactionManager"/>.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.Transaction.NullTransactionManager.#ctor">
            <summary>
            Constructor of <see cref="T:Cosmos.Data.Common.Transaction.NullTransactionManager"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.Transaction.NullTransactionManager.Count">
            <summary>
            To flag the sum of func in this wrapper. This instance always returns 0.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.Transaction.NullTransactionManager.Register(Cosmos.Data.Common.ITransactionWrapper,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Common.Transaction.ScopedTransactionManager">
            <summary>
            A scoped type transaction calling wrapper.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.Transaction.ScopedTransactionManager.#ctor(Cosmos.Data.Common.IUnitOfWorkManager)">
            <summary>
            Constructor of <see cref="T:Cosmos.Data.Common.Transaction.ScopedTransactionManager"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.Transaction.ScopedTransactionManager.Count">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Common.Transaction.ScopedTransactionManager.Register(Cosmos.Data.Common.ITransactionWrapper,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Common.UnitOfWorkTypes">
            <summary>
            Unit of work propagation type
            事务传播方式
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.UnitOfWorkTypes.Required">
            <summary>
            Required <br />
            如果当前没有事务，就新建一个事务，如果已存在一个事务中，加入到这个事务中，默认的选择。
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.UnitOfWorkTypes.Supports">
            <summary>
            Supports <br />
            支持当前事务，如果没有当前事务，就以非事务方法执行。
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.UnitOfWorkTypes.Mandatory">
            <summary>
            Mandatory <br />
            使用当前事务，如果没有当前事务，就抛出异常。
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.UnitOfWorkTypes.NotSupported">
            <summary>
            NotSupported <br />
            以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.UnitOfWorkTypes.Never">
            <summary>
            Never <br />
            以非事务方式执行操作，如果当前事务存在则抛出异常。
            </summary>
        </member>
        <member name="F:Cosmos.Data.Common.UnitOfWorkTypes.Nested">
            <summary>
            Nested <br />
            以嵌套事务方式执行。
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry">
            <summary>
            UnitOfWork operator, an entry of <see cref="T:Cosmos.Data.Common.ITransactionWrapper"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry.#ctor(Cosmos.Data.Common.ITransactionWrapper,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry"/>
            </summary>
            <param name="transWrapper"></param>
            <param name="manualCommit"></param>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry.#ctor(Cosmos.Data.Common.ITransactionWrapper,System.Action,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry"/>
            </summary>
            <param name="transWrapper"></param>
            <param name="disposeAction"></param>
            <param name="manualCommit"></param>
        </member>
        <member name="P:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry.InternalTransaction">
            <summary>
            Gets UnitOfWork Manager
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry.GetOrBegin(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry.IsolationLevel">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry.Commit">
            <summary>
            Commit
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkEntry.Rollback">
            <summary>
            Rollback
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Cosmos.Data.Common.UnitOfWork.NullUnitOfWorkEntry">
            <summary>
            Null UnitOfWork Operator
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.UnitOfWork.NullUnitOfWorkEntry.Instance">
            <summary>
            Gets an instance of <see cref="T:Cosmos.Data.Common.UnitOfWork.NullUnitOfWorkEntry"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.NullUnitOfWorkEntry.GetOrBegin(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.UnitOfWork.NullUnitOfWorkEntry.IsolationLevel">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.NullUnitOfWorkEntry.Commit">
            <summary>
            Commit.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.NullUnitOfWorkEntry.Rollback">
            <summary>
            Rollback
            </summary>
        </member>
        <member name="T:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager">
            <summary>
            UnitOfWork Manager.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.UsingStrategyName">
            <summary>
            Gets or sets the strategy name for holding.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.CurrentStrategy">
            <summary>
            Current strategy
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager"/>.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.#ctor(System.String,System.Func{Cosmos.Data.Core.UnitOfWork.IUowRefStrategy})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager"/>.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.#ctor(System.String,System.Func{Cosmos.Data.Core.UnitOfWork.IUowRefStrategy},System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.Current">
            <summary>
            Gets current unit of work entry
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.Binding(Cosmos.Data.Common.IRepository)">
            <summary>
            Binding repository to this unit of work manager
            </summary>
            <param name="repository"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Action,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Action,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.IsVirtualManager">
            <summary>
            To flag this manager is virtual manager or not.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.GetAdditionalData(System.String)">
            <summary>
            Get additional data
            </summary>
            <param name="keyOfData"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.GetAdditionalData``1">
            <summary>
            Get additional data
            </summary>
            <typeparam name="TData"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.GetAdditionalData``1(System.String)">
            <summary>
            Get additional data
            </summary>
            <typeparam name="TData"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.SetAdditionalData(System.String,System.Object)">
            <summary>
            Set additional data
            </summary>
            <param name="keyOfData"></param>
            <param name="data"></param>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.SetAdditionalData``1(``0)">
            <summary>
            Set additional data
            </summary>
            <param name="data"></param>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.SetAdditionalData``1(System.String,``0)">
            <summary>
            Set additional data
            </summary>
            <param name="keyOfTypedData"></param>
            <param name="data"></param>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.Finalize">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Cosmos.Data.Common.UnitOfWork.UnitOfWorkManager.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.ConcurrencyException">
            <summary>
            Concurrency exception
            </summary>
        </member>
        <member name="M:Cosmos.Data.ConcurrencyException.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.ConcurrencyException"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.ConcurrencyException.#ctor(System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.ConcurrencyException"/>
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Cosmos.Data.ConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.ConcurrencyException"/>
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Cosmos.Data.ConcurrencyException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.ConcurrencyException"/>
            </summary>
            <param name="message"></param>
            <param name="flag"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Cosmos.Data.ConcurrencyException.#ctor(System.Int64,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.ConcurrencyException"/>
            </summary>
            <param name="errorCode"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Cosmos.Data.ConcurrencyException.#ctor(System.Int64,System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.ConcurrencyException"/>
            </summary>
            <param name="errorCode"></param>
            <param name="message"></param>
            <param name="flag"></param>
            <param name="exception"></param>
        </member>
        <member name="T:Cosmos.Data.Core.Internals.DataSupportFlag">
            <summary>
            Data support flags
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.Internals.DataSupportFlag.Value">
            <summary>
            Gets or sets value for Cosmos.Data
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.Pools.ConnectionPool">
            <summary>
            Connection pool, an accessor for <see cref="T:Cosmos.Disposables.ObjectPools.ObjectPoolManager"/>.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.ConnectionPool.Get``1(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Get connection
            </summary>
            <param name="connectionString"></param>
            <param name="timeout"></param>
            <typeparam name="TConn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.ConnectionPool.Return``1(Cosmos.Disposables.ObjectPools.ObjectPayload{``0},System.String)">
            <summary>
            Return connection
            </summary>
            <param name="obj"></param>
            <param name="connectionString"></param>
            <typeparam name="TConn"></typeparam>
        </member>
        <member name="T:Cosmos.Data.Core.Pools.ConnectionPool.Pools">
            <summary>
            Pools
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.ConnectionPool.Pools.Get``1(System.String)">
            <summary>
            Get connection pool
            </summary>
            <param name="connectionString"></param>
            <typeparam name="TConn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.ConnectionPool.Pools.Register``2(System.Func{``1},System.String)">
            <summary>
            Register<br />
            注册指定类型和指定连接字符串的数据库连接池
            </summary>
            <param name="poolFunc"></param>
            <param name="connectionString"></param>
            <typeparam name="TConn"></typeparam>
            <typeparam name="TPool"></typeparam>
        </member>
        <member name="T:Cosmos.Data.Core.Pools.ConnectionPoolManagedModel">
            <summary>
            Connection pool managed model
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.Pools.IConnectionPolicy`1">
            <summary>
            Interface of connection policy
            </summary>
            <typeparam name="TConn"></typeparam>
        </member>
        <member name="T:Cosmos.Data.Core.Pools.IConnectionPool">
            <summary>
            Interface of connection pool
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.IConnectionPool.GetStatisticsInfo">
            <summary>
            Statistics
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.IConnectionPool.GetStatisticsInfoFully">
            <summary>
            StatisticsFully
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.Pools.IConnectionPool`1">
            <summary>
            Interface of connection pool
            </summary>
            <typeparam name="TConn"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.IConnectionPool`1.Acquire(System.Nullable{System.TimeSpan})">
            <summary>
            Get
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.IConnectionPool`1.AcquireAsync">
            <summary>
            Get async
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.IConnectionPool`1.Recycle(Cosmos.Disposables.ObjectPools.ObjectPayload{`0},System.Boolean)">
            <summary>
            Return
            </summary>
            <param name="obj"></param>
            <param name="isReset"></param>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.IConnectionPool`1.Recycle(Cosmos.Disposables.ObjectPools.ObjectPayload{`0},System.Exception,System.Boolean)">
            <summary>
            Return
            </summary>
            <param name="obj"></param>
            <param name="exception"></param>
            <param name="isRecreate"></param>
        </member>
        <member name="M:Cosmos.Data.Core.Pools.IConnectionPool`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.Transaction.NullTransactionWrapper">
            <summary>
            A wrapper for null transaction.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.Transaction.NullTransactionWrapper.Id">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.Transaction.NullTransactionWrapper.GetOrBegin(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Core.Transaction.NullTransactionWrapper.IsolationLevel">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.Transaction.NullTransactionWrapper.Commit(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.Transaction.NullTransactionWrapper.Rollback(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Core.Transaction.NullTransactionWrapper.IsNull">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Core.Transaction.NullDbTransaction">
            <summary>
            Null Transaction
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.Transaction.NullDbTransaction.Instance">
            <summary>
            Gets instance of <see cref="T:Cosmos.Data.Core.Transaction.NullDbTransaction"/>
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.Transaction.NullDbTransaction.DbConnection">
            <summary>
            Gets null DbConnection
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.Transaction.NullDbTransaction.Commit">
            <summary>
            Commit.
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.Transaction.NullDbTransaction.Rollback">
            <summary>
            Rollback.
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.Transaction.NullDbTransaction.IsolationLevel">
            <summary>
            Isolation level
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.RepoLink">
            <summary>
            Repo-Ref
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.RepoLink.#ctor(Cosmos.Data.Common.IRepository)">
            <summary>
            Repo-Ref
            </summary>
            <param name="repository"></param>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.RepoLink.Target">
            <summary>
            Target
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.RepoLink.OriginalUnitOfWork">
            <summary>
            Original uow
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.NothingUowProxy">
            <summary>
            Nothing UoW proxy
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.NothingUowProxy.GetOrBegin(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.NothingUowProxy.IsolationLevel">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.NothingUowProxy.Commit">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.NothingUowProxy.Rollback">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.NothingUowProxy.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.OriginalUowProxy">
            <summary>
            Original UoW proxy
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.OriginalUowProxy.#ctor(Cosmos.Data.Common.IUnitOfWorkEntry)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Core.UnitOfWork.OriginalUowProxy"/>
            </summary>
            <param name="entry"></param>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.OriginalUowProxy.IsolationLevel">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.OriginalUowProxy.GetOrBegin(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.OriginalUowProxy.Commit">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.OriginalUowProxy.Rollback">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.OriginalUowProxy.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.VirtualUowProxy">
            <summary>
            Virtual UoW proxy
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.VirtualUowProxy.#ctor(Cosmos.Data.Common.IUnitOfWorkEntry)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Core.UnitOfWork.VirtualUowProxy"/>
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.VirtualUowProxy.GetOrBegin(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.VirtualUowProxy.IsolationLevel">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.VirtualUowProxy.Commit">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.VirtualUowProxy.Rollback">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.VirtualUowProxy.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.UowRef">
            <summary>
            UoW-Ref
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.UowRef.#ctor(Cosmos.Data.Common.IUnitOfWorkEntry,Cosmos.Data.Core.UnitOfWork.UowRefType,System.Boolean)">
            <summary>
            UoW-Ref
            </summary>
            <param name="entry"></param>
            <param name="type"></param>
            <param name="isNotSupported"></param>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.UowRef.Entry">
            <summary>
            Entry
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.UowRef.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.UowRef.IsNotSupported">
            <summary>
            Is not supported
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.UowRefNew">
            <summary>
            UowRefNew helper
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.UowRefNew.Nothing(System.Boolean,System.Action{Cosmos.Data.Core.UnitOfWork.UowRef})">
            <summary>
            Nothing
            </summary>
            <param name="isNotSupported"></param>
            <param name="onDispose"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.UowRefNew.Virtual(Cosmos.Data.Common.IUnitOfWorkEntry,System.Boolean,System.Action{Cosmos.Data.Core.UnitOfWork.UowRef})">
            <summary>
            Virtual
            </summary>
            <param name="baseUowEntry"></param>
            <param name="isNotSupported"></param>
            <param name="onDispose"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.UowRefNew.Original(Cosmos.Data.Common.IUnitOfWorkEntry,System.Nullable{System.Data.IsolationLevel},System.Action{Cosmos.Data.Core.UnitOfWork.UowRef})">
            <summary>
            Original
            </summary>
            <param name="baseUowEntry"></param>
            <param name="isolationLevel"></param>
            <param name="onDispose"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy">
            <summary>
            UoW-Ref strategy function
            </summary>
        </member>
        <member name="F:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy._allUowRefList">
            <summary>
            Protected property - All Uow-Ref list
            </summary>
        </member>
        <member name="F:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy._registeredUowRefs">
            <summary>
            Protected property - Registered Uow-Ref list
            </summary>
        </member>
        <member name="F:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy._bundledRepoRefs">
            <summary>
            Protected property - Bundled Repo-Ref list
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.Name">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.AllUowRefs">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.RegisteredUowRefs">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.BundledRepoRefs">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.Merge(Cosmos.Data.Core.UnitOfWork.IUowRefStrategy)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.Current">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.Binding(Cosmos.Data.Common.IRepository)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Action,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Action,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.CreateAndReturnUowEntry(Cosmos.Data.Common.ITransactionWrapper,System.Action,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Create and return UoW-Entry
            </summary>
            <param name="transWrapper"></param>
            <param name="disposedAction"></param>
            <param name="manualCommit"></param>
            <param name="types"></param>
            <param name="isolationLevel"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.Finalize">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="F:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy._disposeCounter">
            <summary>
            Internal dispose counter
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.OnDispose">
            <summary>
            On dispose
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.DefaultUowRefStrategy.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy">
            <summary>
            Interface for UoW-Ref strategy function
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.Name">
            <summary>
            Strategy name
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.AllUowRefs">
            <summary>
            Export all Uow-Ref info
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.RegisteredUowRefs">
            <summary>
            Export all registered Uow-Ref info
            </summary>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.BundledRepoRefs">
            <summary>
            Export all bundled Repo-Ref info
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.Merge(Cosmos.Data.Core.UnitOfWork.IUowRefStrategy)">
            <summary>
            Merge all Xxx-Ref
            </summary>
            <param name="strategy"></param>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.Current">
            <summary>
            Gets current unit of work entry
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.Binding(Cosmos.Data.Common.IRepository)">
            <summary>
            Binding repository to this unit of work manager
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Begin an unit of work
            </summary>
            <param name="transWrapper"></param>
            <param name="types"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Begin an unit of work with disposable action
            </summary>
            <param name="transWrapper"></param>
            <param name="manualCommit"></param>
            <param name="types"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Action,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Begin an unit of work with commit manually
            </summary>
            <param name="transWrapper"></param>
            <param name="disposedAction"></param>
            <param name="types"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.CreateUnitOfWork(Cosmos.Data.Common.ITransactionWrapper,System.Action,System.Boolean,Cosmos.Data.Common.UnitOfWorkTypes,System.Nullable{System.Data.IsolationLevel})">
            <summary>
            Begin an unit of work with disposable action and commit manually
            </summary>
            <param name="transWrapper"></param>
            <param name="disposedAction"></param>
            <param name="manualCommit"></param>
            <param name="types"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.IUowRefStrategy.OnDispose">
            <summary>
            On dispose
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.UowRefStrategyFunctions">
            <summary>
            Uow-Ref holding strategies manager
            </summary>
        </member>
        <member name="F:Cosmos.Data.Core.UnitOfWork.UowRefStrategyFunctions.DefaultName">
            <summary>
            Default strategy name
            </summary>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.UowRefStrategyFunctions.OverrideStrategy(System.String,System.Func{Cosmos.Data.Core.UnitOfWork.IUowRefStrategy},System.Boolean)">
            <summary>
            To override strategy
            </summary>
            <param name="name"></param>
            <param name="strategy"></param>
            <param name="asDefault"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.UowRefStrategyFunctions.For(System.String)">
            <summary>
            Get holding strategy.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Core.UnitOfWork.UowRefStrategyFunctions.For(System.String,System.Func{Cosmos.Data.Core.UnitOfWork.IUowRefStrategy})">
            <summary>
            Get holding strategy.
            </summary>
            <param name="name"></param>
            <param name="overrideStrategy"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Cosmos.Data.Core.UnitOfWork.UowRefStrategyFunctions.Default">
            <summary>
            Gets default holding strategy.
            </summary>
        </member>
        <member name="T:Cosmos.Data.Core.UnitOfWork.UowRefType">
            <summary>
            Type of UoW-Ref
            </summary>
        </member>
        <member name="F:Cosmos.Data.Core.UnitOfWork.UowRefType.Original">
            <summary>
            Original<br />
            标记该工作单元为原始工作单元
            </summary>
        </member>
        <member name="F:Cosmos.Data.Core.UnitOfWork.UowRefType.Virtual">
            <summary>
            Virtual<br />
            标记该工作单元为虚拟工作单元，其操作实际上由其内含的原始工作单元来执行
            </summary>
        </member>
        <member name="F:Cosmos.Data.Core.UnitOfWork.UowRefType.Nothing">
            <summary>
            Nothing<br />
            标记该工作单元不执行任何操作
            </summary>
        </member>
        <member name="T:Cosmos.Data.Predicate.ConditionExtensions">
            <summary>
            提供查询条件扩展
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.ConditionExtensions.AsCondition``1(System.Uri)">
            <summary>
            转换为指定类型的查询条件 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uri">请求Uri，从query解析出查询条件</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ConditionExtensions.AsCondition``1(System.Uri,System.Text.Encoding)">
            <summary>
            转换为指定类型的查询条件 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uri">请求Uri，从query解析出查询条件</param>
            <param name="encoding">编码</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ConditionExtensions.AsCondition``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            转换为指定类型的查询条件 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keyValues">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ConditionExtensions.AsCondition``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            转换为指定类型的查询条件 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keyValues">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.ExpressionExtensions">
            <summary>
            谓词筛选表达式扩展
            用于分步实现不确定条件个数的谓词筛选表达式逻辑运算  
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            与逻辑运算
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="expLeft">表达式1</param>
            <param name="expRight">表达式2</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            或逻辑运算
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="expLeft">表达式1</param>
            <param name="expRight">表达式2</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.Object,Cosmos.Data.Predicate.SQLOperator)">
            <summary>
            与逻辑运算
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="expLeft">表达式1</param>
            <param name="propertyName">属性名称</param>
            <param name="value">属性值</param>
            <param name="operator">操作符</param>
            <exception cref="T:System.MissingFieldException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.And``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,Cosmos.Data.Predicate.SQLOperator)">
            <summary>
            与逻辑运算
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">属性类型</typeparam>
            <param name="expLeft">表达式1</param>
            <param name="keySelector">属性选择</param>
            <param name="value">值</param>
            <param name="operator">操作符</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.AndIn``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            与逻辑运算
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="expLeft">表达式1</param>
            <param name="keySelector">属性选择</param>
            <param name="values">值</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.AndNotIn``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            与逻辑运算
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">属性类型</typeparam>
            <param name="expLeft">表达式1</param>
            <param name="keySelector">属性选择</param>
            <param name="values">值</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.Cast``1(System.Linq.Expressions.LambdaExpression)">
            <summary>
            将表达式参数类型转换
            </summary>
            <typeparam name="TNew">新类型</typeparam>
            <param name="expression">表达式</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.ExpressionExtensions.ParameterReplacer">
            <summary>
            参数替换对象
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.ExpressionExtensions.ParameterReplacer.ParameterExpression">
            <summary>
            表达式的参数
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.ParameterReplacer.#ctor(System.Linq.Expressions.ParameterExpression)">
            <summary>
            参数替换对象
            </summary>
            <param name="exp">表达式的参数</param>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.ParameterReplacer.Replace(System.Linq.Expressions.Expression)">
            <summary>
            将表达式调度到此类中更专用的访问方法之一
            </summary>
            <param name="exp">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.ExpressionExtensions.ParameterReplacer.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            获取表达式的参数
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.TypeExtensions">
            <summary>
            类型扩展
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.TypeExtensions.IsInheritFrom``1(System.Type)">
            <summary>
            是否可以从TBase类型派生
            </summary>
            <typeparam name="TBase"></typeparam>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.UriExtensions">
            <summary>
            提供Uri扩展
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.UriExtensions.GetQueryValues(System.Uri,System.Text.Encoding)">
            <summary>
            获取Query参数值
            </summary>
            <param name="uri">Uri</param>
            <param name="encoding">query字符串的编码</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.UriExtensions.UrlDecode(System.String,System.Text.Encoding)">
            <summary>
            Url解码
            </summary>
            <param name="str">字符串</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.UriExtensions.HexToInt(System.Char)">
            <summary>
            hex转为int
            </summary>
            <param name="h">hex</param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.SQLCondition`1">
            <summary>
            表示查询条件
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLCondition`1.Items">
            <summary>
            获取查询条件项
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            查询条件
            </summary>
            <param name="conditionItems">查询条件项</param>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            查询条件
            </summary>
            <param name="conditionItems">查询条件项</param>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.#ctor(System.Collections.Generic.IEnumerable{Cosmos.Data.Predicate.SQLConditionItem})">
            <summary>
            查询条件
            </summary>
            <param name="conditionItems">查询条件项</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.#ctor(System.Collections.Generic.IEnumerable{Cosmos.Data.Predicate.SQLConditionItem{`0}})">
            <summary>
            查询条件
            </summary>
            <param name="conditionItems">查询条件项</param>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.GetConditionItems``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,``0}})">
            <summary>
            转换条件值
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="keyValues">条件值</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.IgnoreFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            配置忽略的条件
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="keySelector">属性选择</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.OperatorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Cosmos.Data.Predicate.SQLOperator)">
            <summary>
            配置比较操作符
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="keySelector">属性选择</param>
            <param name="operator">操作符</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.ToAndPredicate(System.Boolean)">
            <summary>
            转换为And连接的谓词筛选表达式
            </summary>
            <param name="trueWhenNull">当生成的表达式为null时返回true表达式</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLCondition`1.ToOrPredicate(System.Boolean)">
            <summary>
            转换为Or连接的谓词筛选表达式
            </summary>
            <param name="falseWhenNull">当生成的表达式为null时返回false表达式</param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.SQLConditionItem">
            <summary>
            表示条件项
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLConditionItem.MemberName">
            <summary>
            获取或设置属性名称
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLConditionItem.Value">
            <summary>
            获取或设置条件值
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLConditionItem.Operator">
            <summary>
            获取或设置比较操作符
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLConditionItem.AsGeneric``1">
            <summary>
            转换为泛型的ConditionItem
            </summary>
            <typeparam name="T"></typeparam>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLConditionItem.ToString">
            <summary>
            转换为字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.SQLConditionItem`1">
            <summary>
            表示条件项
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLConditionItem`1.TypeProperties">
            <summary>
            获取T类型的所有属性
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLConditionItem`1.Member">
            <summary>
            获取属性
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLConditionItem`1.Value">
            <summary>
            获取条件值
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLConditionItem`1.Operator">
            <summary>
            获取或设置比较操作符
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLConditionItem`1.#ctor(System.Reflection.PropertyInfo,System.Object,System.Nullable{Cosmos.Data.Predicate.SQLOperator})">
            <summary>
            条件项
            </summary>
            <param name="member">属性</param>
            <param name="value">条件值</param>
            <param name="operator">比较操作符</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLConditionItem`1.ConvertToType(System.Object,System.Type)">
            <summary>
            将value转换为目标类型
            </summary>
            <param name="value">要转换的值</param>
            <param name="targetType">转换的目标类型</param>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLConditionItem`1.ToPredicate">
            <summary>
            转换为谓词筛选表达式
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLConditionItem`1.ToString">
            <summary>
            转换为字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.SQLOperator">
            <summary>
            Predicate operator
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.Equal">
            <summary>
            Equal, same as SQLOperatorSlim.EQ
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.NotEqual">
            <summary>
            Not equal
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.GreaterThanOrEqual">
            <summary>
            Greater than or equal
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.LessThanOrEqual">
            <summary>
            Less than or equal
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.GreaterThan">
            <summary>
            Greater than
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.LessThan">
            <summary>
            Less than
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.Contains">
            <summary>
            Contains, can only be used fot String
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.EndWith">
            <summary>
            End with, can only be used fot String
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLOperator.StartsWith">
            <summary>
            Start with, can only be used fot String
            </summary>
        </member>
        <member name="T:Cosmos.Data.Predicate.SQLPredicate">
            <summary>
            提供谓词筛选表达式的生成
            </summary>
        </member>
        <member name="F:Cosmos.Data.Predicate.SQLPredicate.containsMethod">
            <summary>
            Enumerable的Contains方法
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLPredicate.ParameterName">
            <summary>
            获取谓词筛选表达式的参数名
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.#cctor">
            <summary>
            静态构造器
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.True``1">
            <summary>
            返回默认为True的谓词筛选表达式
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.False``1">
            <summary>
            返回默认为False的谓词筛选表达式
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.CreateOrEqual``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            将数组转换为Or的相等的谓词筛选表达式
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">属性类型</typeparam>
            <param name="keySelector">属性选择</param>
            <param name="values">包含的值</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.CreateAndNotEqual``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            将数组转换为And的不等的谓词筛选表达式
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">>属性类型</typeparam>
            <param name="keySelector">属性选择</param>
            <param name="values">包含的值</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.CreateContains``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            生成In操作的谓词筛选表达式
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">属性类型</typeparam>
            <param name="keySelector">属性选择</param>
            <param name="values">包含的值</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.Create``1(System.String,System.Object,Cosmos.Data.Predicate.SQLOperator)">
            <summary>
            根据属性名生成谓词筛选表达式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
            <param name="operator">操作符</param>
            <exception cref="T:System.MissingFieldException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.Create``1(System.Reflection.MemberInfo,System.Object,Cosmos.Data.Predicate.SQLOperator)">
            <summary>
            根据属性生成谓词筛选表达式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="member">属性成员</param>
            <param name="value">值</param>
            <param name="operator">操作符</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.Create``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,Cosmos.Data.Predicate.SQLOperator)">
            <summary>
            根据属性生成谓词筛选表达式
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="keySelector">属性选择</param>
            <param name="value">值</param>
            <param name="operator">操作符</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.Create``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.MemberExpression,System.Object,Cosmos.Data.Predicate.SQLOperator)">
            <summary>
            生成表达式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameter">参数表达式</param>
            <param name="member">成员表达式</param>
            <param name="value">属性值</param>
            <param name="operator">操作符</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.ConstantExpression(System.Object,System.Type)">
            <summary>
            生成常量表达式
            使用属性访问表达式替代常量访问
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Predicate.SQLPredicate.ConstantString">
            <summary>
            表示文本常量
            </summary>
        </member>
        <member name="P:Cosmos.Data.Predicate.SQLPredicate.ConstantString.Value">
            <summary>
            获取常量值
            </summary>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.ConstantString.#ctor(System.Object)">
            <summary>
            文本常量
            </summary>
            <param name="value">常量值</param>
        </member>
        <member name="M:Cosmos.Data.Predicate.SQLPredicate.ConstantString.ToString">
            <summary>
            转换为字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Store.IQueryableStore`1">
            <summary>
            Interface of Queryable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Counts by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Counts by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Exists or not by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Exists or not by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find a collection of paged result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find a collection of paged results by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindFirst(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find first  result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindFirstAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find first  result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindFirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find first or default result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindFirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find first or default result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindSingle(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find single result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindSingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find single result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find single or default result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.FindSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find single or default result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.GetOne(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get one or null...
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.GetOneAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Get one or null...
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.GetPage(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32)">
            <summary>
            Query pageable results by given condition
            </summary>
            <param name="predicate"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`1.GetPageAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Query pageable results by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Store.IQueryableStore`2">
            <summary>
            Interface of Queryable store
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`2.FindById(`1)">
            <summary>
            Find result by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`2.FindByIdAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Find result by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`2.GetOne(`1)">
            <summary>
            Get one or null
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IQueryableStore`2.GetOneAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Get one or null
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Store.IWriteableStore`1">
            <summary>
            Interface of writeable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Add async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.AddAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Add async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.Update(`0)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.Update(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Update
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.UpdateAsync(`0)">
            <summary>
            Update async
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.UpdateAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Update async
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.Remove(`0)">
            <summary>
            Remove by entity
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.Remove(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Remove by a set of entity
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.Remove(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.RemoveAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Remove by entity async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.RemoveAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Remove by a set of entity async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`1.RemoveAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Store.IWriteableStore`2">
            <summary>
            Interface of writeable store
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`2.Remove(`1)">
            <summary>
            Remove by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IWriteableStore`2.RemoveAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Remove by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Store.IUnsafeWriteableStore`1">
            <summary>
            Interface of unsafe writeable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Store.IUnsafeWriteableStore`1.UnsafeRemove(`0)">
            <summary>
            Unsafe remove by entity
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IUnsafeWriteableStore`1.UnsafeRemove(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Unsafe remove by a set of entity
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IUnsafeWriteableStore`1.UnsafeRemoveAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Unsafe remove by entity async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Store.IUnsafeWriteableStore`1.UnsafeRemoveAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Unsafe remove by a set of entity async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Store.IUnsafeWriteableStore`2">
            <summary>
            Interface of unsafe writeable store
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Store.IUnsafeWriteableStore`2.UnsafeRemove(`1)">
            <summary>
            Unsafe remove by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Cosmos.Data.Store.IUnsafeWriteableStore`2.UnsafeRemoveAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Unsafe remove by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.ConnectionStateExtensions">
            <summary>
            Extensions for <see cref="T:System.Data.ConnectionState"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.ConnectionStateExtensions.In(System.Data.ConnectionState,System.Data.ConnectionState[])">
            <summary>
            In
            </summary>
            <param name="state"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.ConnectionStateExtensions.NotIn(System.Data.ConnectionState,System.Data.ConnectionState[])">
            <summary>
            Not in
            </summary>
            <param name="this"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.DataColumnCollectionExtensions">
            <summary>
            Extensions for <see cref="T:System.Data.DataColumnCollection"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.DataColumnCollectionExtensions.AddRange(System.Data.DataColumnCollection,System.String[])">
            <summary>
            Add range
            </summary>
            <param name="coll"></param>
            <param name="columns"></param>
        </member>
        <member name="T:Cosmos.Data.Sx.DataReaderExtensions">
            <summary>
            Extensions for <see cref="T:System.Data.IDataReader"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.IsDBNull(System.Data.IDataReader,System.String)">
            <summary>
            Is DbNull
            </summary>
            <param name="reader"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.ToDataTable(System.Data.IDataReader)">
            <summary>
            To DataTable
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.ToEntity``1(System.Data.IDataReader)">
            <summary>
            To Entity
            </summary>
            <param name="reader"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.ToEntities``1(System.Data.IDataReader)">
            <summary>
            To a set of entity
            </summary>
            <param name="reader"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.ToExpandoObject(System.Data.IDataReader)">
            <summary>
            To expando object
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.ToExpandoObjects(System.Data.IDataReader)">
            <summary>
            To a set of expando object
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetColumnNames(System.Data.IDataRecord)">
            <summary>
            Gets column name
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueAs``1(System.Data.IDataReader,System.Int32)">
            <summary>
            Gets value as...
            </summary>
            <param name="reader"></param>
            <param name="index"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueAs``1(System.Data.IDataReader,System.String)">
            <summary>
            Gets value as...
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueAsOrDefault``1(System.Data.IDataReader,System.Int32)">
            <summary>
            Gets value as... or default...
            </summary>
            <param name="reader"></param>
            <param name="index"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueAsOrDefault``1(System.Data.IDataReader,System.Int32,``0)">
            <summary>
            Gets value as... or default...
            </summary>
            <param name="reader"></param>
            <param name="index"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueAsOrDefault``1(System.Data.IDataReader,System.Int32,System.Func{System.Data.IDataReader,System.Int32,``0})">
            <summary>
            Gets value as... or default...
            </summary>
            <param name="reader"></param>
            <param name="index"></param>
            <param name="defaultValueFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueAsOrDefault``1(System.Data.IDataReader,System.String)">
            <summary>
            Gets value as... or default...
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueAsOrDefault``1(System.Data.IDataReader,System.String,``0)">
            <summary>
            Gets value as... or default value
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueAsOrDefault``1(System.Data.IDataReader,System.String,System.Func{System.Data.IDataReader,System.String,``0})">
            <summary>
            Gets value as... or default value
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <param name="defaultValueFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueTo``1(System.Data.IDataReader,System.Int32)">
            <summary>
            Gets value to...
            </summary>
            <param name="reader"></param>
            <param name="index"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueTo``1(System.Data.IDataReader,System.String)">
            <summary>
            Gets value to...
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueToOrDefault``1(System.Data.IDataReader,System.Int32)">
            <summary>
            Gets value to...or default...
            </summary>
            <param name="reader"></param>
            <param name="index"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueToOrDefault``1(System.Data.IDataReader,System.Int32,``0)">
            <summary>
            Gets value to...or default vaule
            </summary>
            <param name="reader"></param>
            <param name="index"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueToOrDefault``1(System.Data.IDataReader,System.Int32,System.Func{System.Data.IDataReader,System.Int32,``0})">
            <summary>
            Gets value to...or default value
            </summary>
            <param name="reader"></param>
            <param name="index"></param>
            <param name="defaultValueFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueToOrDefault``1(System.Data.IDataReader,System.String)">
            <summary>
            Gets value to...or default...
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueToOrDefault``1(System.Data.IDataReader,System.String,``0)">
            <summary>
            Gets value to...or default value
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.GetValueToOrDefault``1(System.Data.IDataReader,System.String,System.Func{System.Data.IDataReader,System.String,``0})">
            <summary>
            Gets value to...or default value
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <param name="defaultValueFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.ForEach(System.Data.IDataReader,System.Action{System.Data.IDataReader})">
            <summary>
            For each
            </summary>
            <param name="reader"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.ContainsColumn(System.Data.IDataReader,System.Int32)">
            <summary>
            Contains column
            </summary>
            <param name="reader"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataReaderExtensions.ContainsColumn(System.Data.IDataReader,System.String)">
            <summary>
            Contains column
            </summary>
            <param name="reader"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.DataRowExtensions">
            <summary>
            Extensions for <see cref="T:System.Data.DataRow"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.DataRowExtensions.ToEntity``1(System.Data.DataRow)">
            <summary>
            To entity
            </summary>
            <param name="row"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataRowExtensions.ToExpandoObject(System.Data.DataRow)">
            <summary>
            To expando object
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.DataTableExtensions">
            <summary>
            Extensions for <see cref="T:System.Data.DataTable"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.DataTableExtensions.FirstRow(System.Data.DataTable)">
            <summary>
            Gets first row
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataTableExtensions.LastRow(System.Data.DataTable)">
            <summary>
            Gets last row
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataTableExtensions.ToEntities``1(System.Data.DataTable)">
            <summary>
            To a set of entity
            </summary>
            <param name="dt"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DataTableExtensions.ToExpandoObjects(System.Data.DataTable)">
            <summary>
            To a set of expando object
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.DbCommandExtensions">
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbCommand"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteEntity``1(System.Data.Common.DbCommand)">
            <summary>
            Execute entity
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteEntities``1(System.Data.Common.DbCommand)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteEntityAsync``1(System.Data.Common.DbCommand)">
            <summary>
            Execute entity
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbCommand)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteExpandoObject(System.Data.Common.DbCommand)">
            <summary>
            Execute expando object
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteExpandoObjects(System.Data.Common.DbCommand)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbCommand)">
            <summary>
            Execute expando object
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbCommand)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarAs``1(System.Data.Common.DbCommand)">
            <summary>
            Execute scalar as...
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarAsOrDefault``1(System.Data.Common.DbCommand)">
            <summary>
            Execute scalar as... or default...
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarAsOrDefault``1(System.Data.Common.DbCommand,``0)">
            <summary>
            Execute scalar as... or default value
            </summary>
            <param name="command"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarAsOrDefault``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbCommand,``0})">
            <summary>
            Execute scalar as... or default value
            </summary>
            <param name="command"></param>
            <param name="defaultValueFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarAsAsync``1(System.Data.Common.DbCommand)">
            <summary>
            Execute scalar as...
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarAsOrDefaultAsync``1(System.Data.Common.DbCommand)">
            <summary>
            Execute scalar as... or default...
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarAsOrDefaultAsync``1(System.Data.Common.DbCommand,``0)">
            <summary>
            Execute scalar as... or default value
            </summary>
            <param name="command"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarAsOrDefaultAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbCommand,``0})">
            <summary>
            Execute scalar as... or default value
            </summary>
            <param name="command"></param>
            <param name="defaultValueFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarTo``1(System.Data.Common.DbCommand)">
            <summary>
            Execute scalar to...
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarToOrDefault``1(System.Data.Common.DbCommand)">
            <summary>
            Execute scalar to... or default...
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarToOrDefault``1(System.Data.Common.DbCommand,``0)">
            <summary>
            Execute scalar to... or default value
            </summary>
            <param name="command"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarToOrDefault``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbCommand,``0})">
            <summary>
            Execute scalar to... or default value
            </summary>
            <param name="command"></param>
            <param name="defaultValueFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarToAsync``1(System.Data.Common.DbCommand)">
            <summary>
            Execute scalar to...
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarToOrDefaultAsync``1(System.Data.Common.DbCommand)">
            <summary>
            Execute scalar to... or default...
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarToOrDefaultAsync``1(System.Data.Common.DbCommand,``0)">
            <summary>
            Execute scalar to... or default value
            </summary>
            <param name="command"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbCommandExtensions.ExecuteScalarToOrDefaultAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbCommand,``0})">
            <summary>
            Execute scalar to... or default value
            </summary>
            <param name="command"></param>
            <param name="defaultValueFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.DbConnectionExtensions">
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbConnection"/>
            </summary>
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbConnection"/>
            </summary>
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbConnection"/>
            </summary>
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbConnection"/>
            </summary>
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbConnection"/>
            </summary>
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbConnection"/>
            </summary>
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbConnection"/>
            </summary>
            <summary>
            Extensions for <see cref="T:System.Data.Common.DbConnection"/>
            </summary>
            <summary>
            Extensions for <see cref="T:System.Data.IDbConnection"/>
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.CreateCommand(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Data.Common.DbParameter[])">
            <summary>
            Create Command
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.CreateCommand(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Create Command
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntities``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntitiesAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute a set of entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntity``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteEntityAsync``1(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute entity
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObject(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjects(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteExpandoObjectsAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute a set of expando object
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQuery(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteNonQueryAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute NonQuery
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReader(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteReaderAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute Reader
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalar(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="commandFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.String)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbTransaction)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="commandType"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[])">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.ExecuteScalarAsync(System.Data.Common.DbConnection,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
            Execute scalar
            </summary>
            <param name="conn"></param>
            <param name="cmdText"></param>
            <param name="parameters"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.EnsureOpen(System.Data.IDbConnection)">
            <summary>
            Ensure open
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.IsConnectionOpen(System.Data.IDbConnection)">
            <summary>
            Is connection open
            </summary>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbConnectionExtensions.IsNotConnectionOpen(System.Data.IDbConnection)">
            <summary>
            Is connection not open
            </summary>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.DbParametersExtensions">
            <summary>
            Extensions for DbParameters
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.DbParametersExtensions.ToDbParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Data.Common.DbCommand)">
            <summary>
            TO DbParameters
            </summary>
            <param name="dict"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.DbParametersExtensions.ToDbParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Data.Common.DbConnection)">
            <summary>
            To DbParameters
            </summary>
            <param name="dict"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.SqlDateExtensions">
            <summary>
            Extensions for SqlDateTime
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.SqlDateExtensions.ToSqlDate(System.DateTime)">
            <summary>
            To SqlDate
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.SqlDateExtensions.ToSqlDateTime(System.DateTime)">
            <summary>
            To SqlDateTime
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.SqlDateExtensions.ToSqlDate(System.Nullable{System.DateTime})">
            <summary>
            To SqlDate
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.SqlDateExtensions.ToSqlDateTime(System.Nullable{System.DateTime})">
            <summary>
            To SqlDateTime
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.SqlDateExtensions.IsValidSqlSmallDateTime(System.DateTime)">
            <summary>
            Is valid sql small datetime
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Sx.SqlDateExtensions.IsValidSqlDateTime(System.DateTime)">
            <summary>
            Is valid sql datetime
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Sx.SqlDateExtensions.DoubleHelper">
             <summary>
             This helper is a copy from MathNet.
            
             GitHub info:
                 mathnet/mathnet-numerics
                 https://github.com/mathnet/mathnet-numerics
                 MIT/X11
             </summary>
        </member>
        <member name="T:Cosmos.Data.Sx.SqlSystemTypeExtensions">
            <summary>
            Extensions for Sql SystemType
            </summary>
        </member>
        <member name="M:Cosmos.Data.Sx.SqlSystemTypeExtensions.SqlSystemTypeToSqlDbType(System.Byte)">
            <summary>
            Sql system type to Sql DbType
            </summary>
            <param name="this"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
    </members>
</doc>
